// Code generated by MockGen. DO NOT EDIT.
// Source: ./../internal/services/storage/sessions.go

// Package sessionStorageMocks is a generated GoMock package.
package sessionStorageMocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	entities "webinar/graphql/server/internal/entities"
)

// MockSession is a mock of Session interface
type MockSession struct {
	ctrl     *gomock.Controller
	recorder *MockSessionMockRecorder
}

// MockSessionMockRecorder is the mock recorder for MockSession
type MockSessionMockRecorder struct {
	mock *MockSession
}

// NewMockSession creates a new mock instance
func NewMockSession(ctrl *gomock.Controller) *MockSession {
	mock := &MockSession{ctrl: ctrl}
	mock.recorder = &MockSessionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSession) EXPECT() *MockSessionMockRecorder {
	return m.recorder
}

// Set mocks base method
func (m *MockSession) Set(ctx context.Context, sessionKey string, session entities.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, sessionKey, session)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set
func (mr *MockSessionMockRecorder) Set(ctx, sessionKey, session interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockSession)(nil).Set), ctx, sessionKey, session)
}

// Get mocks base method
func (m *MockSession) Get(ctx context.Context, sessionKey string) (entities.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, sessionKey)
	ret0, _ := ret[0].(entities.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockSessionMockRecorder) Get(ctx, sessionKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSession)(nil).Get), ctx, sessionKey)
}
